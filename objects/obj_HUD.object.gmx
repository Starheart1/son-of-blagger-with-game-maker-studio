<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>air_level</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>480</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>air_counter</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>36</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>color_index</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>color_counter</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>increase_color_index</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>true</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Background is black
draw_rectangle_color(0, view_yview[1], view_wview[1], view_yview[1] + view_hview[1], c_black, c_black, c_black, c_black, false);

var char_width = 16;

blue = make_color_rgb(57, 154, 255);

// Display the number of livres remaining
draw_set_color(blue);
draw_text(char_width * 2, view_yview[1] + char_width * 2, "AIR");

// Display air quantity
draw_rectangle_color(char_width * 6, view_yview[1] + char_width * 2, char_width * 38, view_yview[1] + char_width * 3, c_red, blue, blue, c_red, false);


// Decrease the air level
if (game_state = PLAYING)
{
    counter -= 1;
    
    if (counter = 0)
    {
        counter = 36;
        air_level -=1;
    }
    
    if (air_level = 0)
    {
        game_state = KILL_PLAYER;
    }

}

// Display the air level
if (game_state != KILL_PLAYER and air_level &gt;0)
{
    draw_set_color(c_black);
    draw_rectangle(char_width * 6 + 16, view_yview[1] + char_width * 2 + 4, char_width * 6 + 16 + air_level, view_yview[1] + char_width * 3 - 4, false);
}

// If there is a 'bonus man', display the 'bonus_man' sprite, and change its color
if (bonus_man = true)
{
    color_counter -= 1;
    
    if (color_counter = 0)
    {
        color_counter = 3;
    
        if (increase_color_index = true)
            color_index += 1;
        else
            color_index -= 1;
        
        if (color_index = 4)
            increase_color_index = false;
        
        if (color_index = 1)
            increase_color_index = true;
    }
    
    draw_sprite_ext(spr_bonus_man, image_index, char_width * 2, view_yview[1] + char_width * 5, 1, 1, 1, bonus_man_colors[color_index], 1);
}

// Display the number of livres remaining
draw_set_color(c_gray);
draw_text(char_width * 2, view_yview[1] + char_width * 6, "LIVES");
draw_set_color(c_white);
draw_text(char_width * 8, view_yview[1] + char_width * 6, string_repeat("0", 2 - string_length(string(lives))) + string(lives));

// Display the score
draw_set_color(c_gray);
draw_text(char_width * 2, view_yview[1] + char_width * 8, "SCORE");
draw_set_color(c_white);
draw_text(char_width * 8, view_yview[1] + char_width * 8, string_repeat("0", 6 - string_length(string(score))) + string(score));

// Display the current level
draw_set_color(c_gray);
draw_text(char_width * 30, view_yview[1] + char_width * 6, "LEVEL");
draw_set_color(c_white);
draw_text(char_width * 36, view_yview[1] + char_width * 6, string_repeat("0", 2 - string_length(string(level))) + string(level));

// Display the score
draw_set_color(c_gray);
draw_text(char_width * 23, view_yview[1] + char_width * 8, "HI-SCORE");
draw_set_color(c_white);
draw_text(char_width * 32, view_yview[1] + char_width * 8, "000000");

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
